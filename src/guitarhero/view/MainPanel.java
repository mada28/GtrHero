/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guitarhero.view;

import guitarhero.models.Dot;
import guitarhero.models.Colours;
import java.awt.Graphics;
import java.awt.Graphics2D;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.List;
import javax.imageio.ImageIO;

/**
 *
 * @author Buddy-1cent
 */

public class MainPanel extends javax.swing.JPanel {

    /**
     * Creates new form MainPanel
     */
    
    Image backBuffer;
    BufferedImage background;
    BufferedImage dot;
    BufferedImage dotr;
    BufferedImage doty;
    BufferedImage dotb;
    BufferedImage doto;
    BufferedImage dotg;
    BufferedImage dotp;
    BufferedImage dotrb;
    BufferedImage dotrg;
    List<Dot> dots;
    
    public MainPanel() {
        initComponents();
        

        
        backBuffer=new BufferedImage(600, 508, BufferedImage.SCALE_DEFAULT);
        try {
            background = ImageIO.read(getClass().getResource("/guitarhero/view/background.jpg"));
            dotr = ImageIO.read(getClass().getResource("/guitarhero/view/red.png"));
            doty = ImageIO.read(getClass().getResource("/guitarhero/view/yellow.png"));
            dotb = ImageIO.read(getClass().getResource("/guitarhero/view/blue.png"));
            doto = ImageIO.read(getClass().getResource("/guitarhero/view/orange.png"));
            dotg = ImageIO.read(getClass().getResource("/guitarhero/view/green.png"));
            dotp = ImageIO.read(getClass().getResource("/guitarhero/view/purple.png"));
            dotrb = ImageIO.read(getClass().getResource("/guitarhero/view/pink_black.png"));
            dotrg = ImageIO.read(getClass().getResource("/guitarhero/view/pink_grey.png"));
        } catch (IOException ex) { System.out.println("Image File Error"); }
    }
    
    @Override
    public void paintComponent(Graphics graphic) {
        super.paintComponent(graphic);
        Graphics g = backBuffer.getGraphics();
        g.drawImage(background, 0, 0, backBuffer.getWidth(null),backBuffer.getHeight(null),null);
        
        Dot a = new Dot(Colours.YELLOW,0,500);
        g.drawImage(dotrb,a.getColourPosition(), a.getPosition(), null);
        
        if (dots!=null ) {
            for(Dot d :dots) {
                switch(d.getColour()){
                    case RED:    dot = dotr;
                            break;
                    case YELLOW: dot = doty;
                            break;
                    case BLUE:   dot = dotb;
                            break;
                    case ORANGE: dot = doto;
                            break;
                    case GREEN:  dot = dotg;
                            break;
                    case PURPLE: dot = dotp;
                            break;
                    default: System.out.println("je to v hajzlu");
                            break;
                }
                g.drawImage(dot,d.getColourPosition(), d.getPosition(), null);
            }
        }

        Graphics2D graphic2d = (Graphics2D) graphic;
        //graphic2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
        //        RenderingHints.VALUE_ANTIALIAS_ON);
        graphic2d.drawImage(backBuffer, 0, 0,this.getWidth(),this.getHeight(), null);
    }
    
    public void updateModel(List<Dot> data) {
        this.dots=data;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setAutoscrolls(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(599, 510));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}